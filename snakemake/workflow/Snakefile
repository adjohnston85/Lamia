#!/usr/bin/env python

# Snakemake Snakefile for the Majel pipeline

# Include rule and function files
include: "master.smk"
include: "rules/00_transfer_ref_genome.smk"
include: "rules/01_softlink_fastq.smk"
include: "rules/01_download_sra.smk"
include: "rules/02_trim_fastq.smk"
include: "rules/03_align_fastq.smk"
include: "rules/04_deduplicate_bam.smk"
include: "rules/05_call_methylation.smk"
include: "rules/06_call_variants.smk"
include: "rules/07_calculate_statistics.smk"
include: "rules/08_methylseekr_and_TDF.smk"
include: "rules/09_majel_cleanup.smk"

# Define local rules for the pipeline
localrules: \
    all, \
    transfer_ref_genome, \
    softlink_fastq, \
    picard_metrics, \
    bismark2report, \
    calculate_coverage, \
    merge_fastq, \
    calculate_stats, \
    cleanup, \
    rsync

local_log = os.path.join(config['output_path'], 'snakemake')
output_files = get_all_files(D_genomes, D_sample_details)

# Define a rule to generate all output files from the pipeline
rule all:
    input:
        output_files

# Define actions to perform on pipeline start, success, and error
onstart:
    # Append the hidden snakemake log to a local log file    
    shell("cat {log} >> {local_log}.log")

onsuccess:
    # Copy relevant portion of log to the sample folder
    copy_log_to_sample(log)
    
    # Append the hidden snakemake log to a local log file
    shell("cat {log} >> {local_log}.log")

    # Remove temporary files for each sample
    for sample, sample_details in D_sample_details.items():
        remove_temp_files(sample, sample_details)

onerror:
    # Copy relevant portion of log to the sample folder    
    copy_log_to_sample(log)
    
    # Append the hidden snakemake log to a local log file    
    shell("cat {log} >> {local_log}.error")

'''
Rules:
    Snakefile:
        all                     - establishes all output files from all rules
    
    00_transfer_ref_genome.smk:
        transfer_ref_genome     - transfers reference genome files to working directory when using an HPC job scheduling system

    01_softlink_fastq.smk:
        softlink_fastq          - softlinks fastq files derived from "data_dir" and "file_prefixes" --config variable
    
    01_sra_download.smk:
        sra_download            - downloads run accessions stiulated in "file_prefixes --config variable
        sra_to_fastq            - converts sra files to fastqs
    
    02_trim_fastq.smk:
        move_umi                - moves umis from read to name uisng Fastp
        trim_fastq              - trims fastqs using trim_galore
        merge_fastq             - merges r1 fastqs together and r2 fastqs together
    
    03_align_fastq.smk:
        bismark_align           - aligns fastq sequences using Bismark to produce a BAM file
        sort_bam                - sorts BAM file produced by Bismark

    03_bismark2report.smk:
        bismark_deduplicate     - used only for bismark2report: deduplicates BAM file
        bismark_methylation     - used only for bismark2report: calls cytosine methylation
        bismark2report          - produces Bismark html report

    04_deduplicate_bam.smk:
        deduplicate_bam         - deduplicates reads in sorted BAM using Gencore for UMI support
        merge_deduplicate_bams  - merges deduplicated CT and GA BAMs

    05_call_methylation.smk:
        call_methylation        - calls cytosine methylation using MethylDackel for downstream analysis

    06_call_variants.smk:
        mask_converted_bases    - masks base positions in BAM potentially affected by cytosine conversion
        call_variants           - calls variants from cytosine converted data

    07_calculate_statistics.smk:
        calculate_coverage      - calculates sequencing coverage statistics
        calculate_conversion    - calculates cytosine conversion statistics

    08_methylseekr_and_TDF.smk:
        methylseekr_and_TDF     - calls UMRs and LMRs with and without PMDs, produces TDF file for IGV

    09_majel_cleanup.smk:
        cleanup                 - removes temporary files, restructures ouput directories, and zips text files
        rsync                   - moves final output to a specified directory
'''
